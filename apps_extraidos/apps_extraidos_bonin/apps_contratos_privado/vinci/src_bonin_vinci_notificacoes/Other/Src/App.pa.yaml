# ************************************************************************************************
# Warning: YAML source code for Canvas Apps should only be used to review changes made within Power Apps Studio and for minor edits (Preview).
# Use the maker portal to create and edit your Power Apps.
# 
# The schema file for Canvas Apps is available at https://go.microsoft.com/fwlink/?linkid=2304907
# 
# For more information, visit https://go.microsoft.com/fwlink/?linkid=2292623
# ************************************************************************************************
App:
  Properties:
    OnStart: "=// Carrega o cache local de todas as collections importantes, sempre garantindo estrutura\r\nLoadData(colTelas, \"CacheTelas\", true\r\n);\r\nLoadData(Table(VarUsuario), \"CacheUsuario\", true\r\n);\r\nLoadData(VarUsuarioFoto, \"CacheUsuarioFoto\", true\r\n);\r\nLoadData(colDadosCidades, \"CacheDadosCidades\", true\r\n);\r\nLoadData(colDadosElementos, \"CacheDadosElementos\", true\r\n);\r\n\r\nIfError(\r\n    LoadData(colDadosLista, \"CacheDadosLista\", true),\r\n    ClearCollect(colDadosLista, Filter(db_notificacoes, false))\r\n);\r\nIfError(\r\n    LoadData(colDadosListaContador, \"CacheDadosListaContador\", true),\r\n    ClearCollect(colDadosListaContador, ShowColumns(Filter(db_notificacoes, false), id_notificacao))\r\n);\r\nIfError(\r\n    LoadData(colComparacaoLista, \"CacheListaComparacao\", true),\r\n    // Se for só o campo ID_Referencia, pode usar ShowColumns\r\n    ClearCollect(colComparacaoLista, ShowColumns(Filter(db_notificacoes, false), id_notificacao))\r\n);\r\nIfError(\r\n    LoadData(colDadosOffline, \"CacheDadosOffline\", true),\r\n    ClearCollect(colDadosOffline, db_notificacoes)\r\n);\r\n\r\n// Se online, atualiza dados e salva o cache\r\nIf(\r\n    Connection.Connected,\r\n\r\n        // Salva as informações do usuário no cache\r\n        Set(VarUsuario, {Nome: Text(User().FullName), Email: Text(User().Email)});\r\n        SaveData(Table(VarUsuario), \"CacheUsuario\");\r\n\r\n        Set(VarUsuarioFoto, Table({\r\n            Foto: UsuáriosdoOffice365.UserPhoto(User().Email)\r\n        }));\r\n        SaveData(VarUsuarioFoto, \"CacheUsuarioFoto\");\r\n        \r\n        // Salva as telas no cache\r\n        ClearCollect(\r\n        colTelas,\r\n            Table(\r\n                {NomeTela: \"Home\", Tela: 'Home Screen', Icon: Icon.Hamburger},\r\n                {NomeTela: \"Contatos\", Tela: 'Editar Notificação Screen', Icon: Icon.People},\r\n                {NomeTela: \"Nova Fiscalização\", Tela: 'Nova Fiscalização Screen', Icon: Icon.AddDocument}\r\n            ));\r\n        SaveData(colTelas, \"CacheTelas\");\r\n\r\n        // Atualiza dados auxiliares (cidades)\r\n        ClearCollect(colDadosCidades, db_cidades_cadastradas);\r\n        SaveData(colDadosCidades, \"CacheDadosCidades\");\r\n\r\n        // Atualiza dados auxiliares (elementos)\r\n        ClearCollect(colDadosElementos, db_tipo_elemento);\r\n        SaveData(colDadosElementos, \"CacheDadosElementos\");\r\n\r\n        // Atualiza dados auxiliares (notificacoes)\r\n\r\n        // Carrega lista principal do SharePoint em lotes\r\n        Set(VarLote, 1000);\r\n        Set(PrimeiraLinha, First(SortByColumns(db_notificacoes, \"ID_Referencia\", SortOrder.Ascending)).ID_Referencia);\r\n        Set(UltimaLinha, First(SortByColumns(db_notificacoes, \"ID_Referencia\", SortOrder.Descending)).ID_Referencia);\r\n        Set(QtdLotes, RoundUp((UltimaLinha - PrimeiraLinha + 1) / VarLote, 0));\r\n        ClearCollect(SeqLotes, Sequence(QtdLotes, 0));\r\n        ClearCollect(colDadosLista, Filter(db_notificacoes, false));\r\n\r\n        ForAll(\r\n            SeqLotes As item,\r\n            With(\r\n                {\r\n                    limInf: item.Value * VarLote + PrimeiraLinha,\r\n                    limSup: (item.Value + 1) * VarLote + PrimeiraLinha - 1\r\n                },\r\n                Collect(\r\n                    colDadosLista,\r\n                    Filter(\r\n                        db_notificacoes,\r\n                        ID_Referencia >= limInf && ID_Referencia <= limSup\r\n                    )\r\n                )\r\n            )\r\n        );\r\n        SaveData(colDadosLista, \"CacheDadosLista\");\r\n\r\n        ClearCollect(colDadosListaContador, ShowColumns(colDadosLista, id_notificacao));\r\n        SaveData(colDadosListaContador, \"CacheDadosListaContador\");\r\n\r\n        // Atualiza collection de IDs únicos\r\n        ClearCollect(\r\n            colComparacaoLista,\r\n            ShowColumns(colDadosLista, id_notificacao)\r\n        );\r\n        SaveData(colComparacaoLista, \"CacheListaComparacao\");\r\n\r\n        // MARCA como \"DUPLICADO\" todo item do offline cujo id_notificacao já está no SharePoint (não remove ainda!)\r\n        ForAll(\r\n            colDadosOffline As item,\r\n            If(\r\n                !IsBlank(LookUp(colComparacaoLista, id_notificacao = item.id_notificacao)),\r\n                Patch(\r\n                    colDadosOffline,\r\n                    LookUp(colDadosOffline, id_notificacao = item.id_notificacao),\r\n                    { StatusSync: \"DUPLICADO\", MensagemSync: \"Já existe no SharePoint.\" }\r\n                )\r\n            )\r\n        );\r\n        SaveData(colDadosOffline, \"CacheDadosOffline\");\r\n\r\n        If(\r\n            CountRows(colDadosOffline) = 0,\r\n            Notify(\"⚠️ Nenhum dado carregado no modo offline\", NotificationType.Warning)\r\n        )\r\n    ,\r\n        // Se offline: só usa os dados carregados do cache acima\r\n        Blank()\r\n)\r\n"
    Theme: =PowerAppsTheme
